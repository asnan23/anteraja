@page "/deleteprice/{id}"
@using AnterAjaTest.Shared
@using Newtonsoft.Json

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h2>Delete Master Price</h2>
@if (masterPrice != null)
{
    <p>Are you sure you want to delete this Master Price ?</p>
    <EditForm Model="masterPrice" OnValidSubmit="Delete" class="card card-body bg-light mt-5">
        <div class="form-group row">
            <label for="name" class="col-md-2 col-form-label">Origin:</label>
            <div class="col-md-10">
                   @masterPrice.origin_code
            </div>
        </div>

        <div class="form-group row">
            <label for="supplier" class="col-md-2 col-form-label">Destination:</label>
            <div class="col-md-10">
                @masterPrice.destination_code
            </div>
        </div>

        <div class="form-group row">
            <label for="price" class="col-md-2 col-form-label">Price:</label>
            <div class="col-md-10">
                @masterPrice.price
            </div>
        </div>

        <div class="form-group row">
            <label for="image" class="col-md-2 col-form-label">Product:</label>
            <div class="col-md-10">
                @masterPrice.product
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-right">
                <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
                <button type="submit" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }
    MasterPriceVM masterPrice = new MasterPriceVM();
    protected override async Task OnInitializedAsync()
    {
        var res = await Http.GetFromJsonAsync<ResponseDto>("MasterPrice/" + Id);
        masterPrice = JsonConvert.DeserializeObject<MasterPriceVM>(Convert.ToString(res.Result));
    }
    protected async Task Delete()
    {

        var response = await Http.DeleteAsync("MasterPrice/" + Id);
        var responDto = await response.Content.ReadFromJsonAsync<ResponseDto>();
        if (responDto.IsSuccess)
        {
            await JsRuntime.InvokeVoidAsync("alert", responDto.DisplayMessage);
            NavigationManager.NavigateTo("index");
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("index");
    }

}
